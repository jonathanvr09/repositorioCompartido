
// ------------------------------------------------Solucion examen final de Programación Imperativa!!

const alumnos = [
    {
      id: 0,
      nombre: "Leandro",
      apellido: "Borrelli",
      legajo: 20210308,
      notas: [],
    },
    {
      id: 1,
      nombre: "Esteban",
      apellido: "Piazza",
      legajo: 20210211,
      notas: [],
    },
    {
      id: 2,
      nombre: "Martin",
      apellido: "Cejas",
      legajo: 20210218,
      notas: [],
    },
    {
      id: 3,
      nombre: "Karina",
      apellido: "Borgna",
      legajo: 20210516,
      notas: [],
    },
    {
      id: 5,
      nombre: "Javier",
      apellido: "Riera",
      legajo: 20220125,
      notas: [],
    },
  ];



// Ejercicio 1

//     1- Revisa el siguiente archivo, identifica sus componentes, vamos a estar usándolos a lo largo de este ejercicio.  

//         ¿Qué tipo de dato contiene la variable ‘alumnos’?
//         R// La variable alumnos es un array (arreglo).

//         ¿Qué propiedades tiene la estructura definida en el archivo final.js? 
//         R// La estructura definida tiene como propiedades varios objetos literarios.


//     2- Crear una función que ordene la estructura definida en el archivo final.js según la propiedad legajo de forma ascendente. (*) 

let ordenarEstructura = ( arr ) => {

    let aux;

    for ( let i = 0; i < arr.length; i++ ) {
      for ( let j = 0; j < arr.length - 1; j++ ) {
        if ( arr[j].legajo > arr[j + 1].legajo ) {
          aux = arr[j];
          arr[j] = arr[j + 1];
          arr[j + 1] = aux;
        }
      }
    }
  };
  console.log("---------------- Ejercidio 1, numeral 2. ----------------"); 
  console.log(alumnos);     //Antes
  ordenarEstructura(alumnos);
  console.log(alumnos);     //Despues


// Ejercicio 2

// Dado el objeto:

const  alumno = {

    id: 5,
    nombre: "Javier",
    apellido: "Riera",
    legajo: 20220125,
    notas: [10,9,8,7,9]

}


//     1- Crear un método que retorne el promedio de notas. (*)

let promedioNotas = (estudiante) =>{
    let total = 0;
    for (let i =0; i < estudiante.notas.length ; i++)
    {
        total += estudiante.notas[i];
    }
    return total/estudiante.notas.length;
}

console.log("---------------- Ejercidio 2, numeral 1. ----------------"); 
console.log(promedioNotas(alumno));



//     2- Crear una función que ordene las notas del alumno de forma descendente. (*)

let ordenarNotas = ( arr ) => {

    let temp;
    for (let i = 0; i < arr.notas.length; i++) {
      for (let j = 0; j < arr.notas.length - 1; j++) {
        if (arr.notas[j] < arr.notas[j + 1]) {
          temp = arr.notas[j];
          arr.notas[j] = arr.notas[j + 1];
          arr.notas[j + 1] = temp;
        }
      }
    }

  };

console.log("---------------- Ejercidio 2, numeral 2. ----------------"); 
ordenarNotas(alumno);
console.log( alumno);



// Ejercicio 3

//     1- Crea una matriz de 3x3, cuadrada, con números enteros positivos en cada una de sus posiciones.

let matriz = [
    [28, 11, 61],
    [8, 45, 7],
    [59, 31, 29],
  ];

//     2- Crear una función que retorne la suma de todos los números dentro de la matriz que sean múltiplos de 3. 

let sumMult3 = ( ) => {
    let sum;

    for( let i= 0; i < matriz.length; i++ ){
        for( let j = 0; j < matriz[i].length; j++ ){
            if ( matriz[i][j] % 3 == 0 ){
                sum += matriz[i][j];
            }       
        }
    }

    return sum;
}

console.log("---------------- Ejercidio 3, numeral 2. ----------------"); 
console.log(sumMult3());

//     3- Crear una función que retorne un valor booleano dependiendo si la suma de todos los valores de la matriz es par.

let valorBooleano = ( ) => {
    
    let sum;
    for( let i= 0; i<matriz.length; i++ ){
        for( let j=0; j < matriz[i].length; j++ ){           
                sum += matriz[i][j];
             
        }
    }
    if ( sum  % 2 === 0 ){
        return true;        
    }
    return false;
}

console.log("---------------- Ejercidio 3, numeral 3. ----------------"); 
console.log(valorBooleano());


//     4- Crear una función que retorne la suma de las diagonales de la matriz.


let diagPrin =  () => {

    let primera;
    for (let i = 0; i < matriz.length; i++) {

        primera *=  matriz[i][i];

    }
}

let diagSec =  () => {

    let segunda;
    for (let i = 0; i < matriz.length; i++) {

        segunda *=  matriz[i][2-i];
   
    }
}

let sumaDiag = () => {
    primera + segunda
    return sumaDiag
}

console.log("---------------- Ejercidio 3, numeral 4. ----------------"); 


// (*) Deberás mostrar por consola antes y después de función o método que implementaste. Utiliza VisualStudio code. 
 
